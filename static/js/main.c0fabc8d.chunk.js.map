{"version":3,"sources":["redux/data/dataActions.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","styles/globalStyles.js","App.js","redux/blockchain/blockchainActions.js","reportWebVitals.js","index.js"],"names":["fetchDataFailed","payload","type","fetchData","dispatch","a","store","getState","blockchain","smartContract","methods","totalSupply","call","console","log","initialState","loading","account","web3","errorMsg","blockchainReducer","state","action","cost","error","dataReducer","rootReducer","combineReducers","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","createStore","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","ethers","require","keccak256","MerkleTree","addresses","url","fetch","then","res","json","ip","city","country_code","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","hashAccount","userAddress","Buffer","from","utils","solidityKeccak256","slice","generateMerkleTree","map","sortPairs","input","len","claimNFTs","gasLimit","totalCostWei","String","totalGasLimit","merkleProof","proof","getHexProof","generateMerkleProof","finaltree","getHexRoot","length","mintListed","send","to","value","once","err","receipt","getData","getConfig","headers","Accept","configResponse","config","useEffect","style","padding","backgroundColor","href","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","substring","onClick","e","window","open","margin","Number","preventDefault","connect","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","transform","width","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","connectFailed","abiResponse","abi","localStorage","removeItem","web3Modal","Web3Modal","network","cacheProvider","provider","Web3","Web3EthContract","setProvider","eth","getAccounts","accounts","request","method","networkId","SmartContractObj","on","updateAccount","location","reload","message","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0fabc8d.chunk.js","sourcesContent":["// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst { ethers } = require('ethers');\nconst keccak256 = require('keccak256');\nconst { MerkleTree } = require('merkletreejs');\nconst addresses = require('./whitelist.json');\n\n\nfunction json(url) {\n  return  fetch(url).then(res => res.json());\n}\n\nlet apiKey = 'f6865713846c8b03486ae881ed47f6a9986d187963276b2490267345';\njson(`https://api.ipdata.co?api-key=${apiKey}`).then(data => {\n  console.log(data.ip);\n  console.log(data.city);\n  console.log(data.country_code);\n  // so many more properties\n});\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  function hashAccount(userAddress) {\n    return Buffer.from(\n      ethers.utils.solidityKeccak256(\n        ['address'],\n        [userAddress]\n      ).slice(2),\n      'hex'\n    );\n  }\n\n  function generateMerkleTree(addresses) {\n    const merkleTree = new MerkleTree(\n      addresses.map(hashAccount),\n      keccak256,\n      { sortPairs: true }\n    );\n    return merkleTree;\n  }\n\n  function generateMerkleProof(userAddress) {\n    const merkleTree = generateMerkleTree(addresses);\n    const proof = merkleTree.getHexProof(\n      hashAccount(userAddress)\n    );\n    console.log(\"the merkle proof:\", proof);\n    return proof;\n  }\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    let merkleProof = generateMerkleProof(blockchain.account);\n    console.log(\"merkleproof:\", merkleProof);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    let finaltree = generateMerkleTree(addresses);\n\n    console.log(finaltree.getHexRoot());\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    if (merkleProof.length===0) {\n      setFeedback(\"You're not on the whitelist. Please mint during the public sale.\")\n    } else {\n      setClaimingNft(true);\n      blockchain.smartContract.methods\n        .mintListed(mintAmount, merkleProof)\n        .send({\n          gasLimit: String(totalGasLimit),\n          to: CONFIG.CONTRACT_ADDRESS,\n          from: blockchain.account,\n          value: totalCostWei,\n        })\n        .once(\"error\", (err) => {\n          console.log(err);\n          setFeedback(\"Sorry, something went wrong please try again later.\");\n          setClaimingNft(false);\n        })\n        .then((receipt) => {\n          console.log(receipt);\n          setFeedback(\n            `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n          );\n          setClaimingNft(false);\n          dispatch(fetchData(blockchain.account));\n        });\n\n      }\n    };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 50) {\n      newMintAmount = 50;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <a href={CONFIG.MARKETPLACE_LINK}>\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        </a>\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <span\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <StyledButton\n                onClick={(e) => {\n                  window.open(\"/config/roadmap.png\", \"_blank\");\n                }}\n                style={{\n                  margin: \"5px\",\n                }}\n              >\n                Roadmap\n              </StyledButton>\n              <StyledButton\n                style={{\n                  margin: \"5px\",\n                }}\n                onClick={(e) => {\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\n                }}\n              >\n                {CONFIG.MARKETPLACE}\n              </StyledButton>\n            </span>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst INFURA_ID = \"\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n      rpc: {\n        4: \"https://rinkey.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\", \n      },\n    },\n  },\n\n};\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    try {\n      const abiResponse = await fetch(\"/config/abi.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const abi = await abiResponse.json();\n      const configResponse = await fetch(\"/config/config.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const CONFIG = await configResponse.json();\n      localStorage.removeItem(\"walletconnect\");\n      localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\n      const web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: false, // optional\n        providerOptions, // required\n      });\n      const provider = await web3Modal.connect();\n      const web3 = new Web3(provider);\n      console.log(\"web\", web3);\n\n      Web3EthContract.setProvider(provider);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await provider.request({\n        method: \"net_version\",\n      });\n      console.log(\"networkId\", networkId);\n      if (networkId == CONFIG.NETWORK.ID) {\n        const SmartContractObj = new Web3EthContract(\n          abi,\n          CONFIG.CONTRACT_ADDRESS\n        );\n        dispatch(\n          connectSuccess({\n            account: accounts[0],\n            smartContract: SmartContractObj,\n            web3: web3,\n          })\n        );\n        // Add listeners start\n        provider.on(\"accountsChanged\", (accounts) => {\n          dispatch(updateAccount(accounts[0]));\n        });\n        provider.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        // Add listeners end\n      } else {\n        dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n      }\n    } catch (err) {\n      console.log(\"error\", err, \" message\", err.message);\n      if (\n        typeof err !== \"undefined\" &&\n        typeof err.message !== \"undefined\" &&\n        err.message.includes(\"User Rejected\")\n      ) {\n        dispatch(connectFailed(\"User rejected the request\"));\n      } else if (\n        (typeof err === \"string\" || err instanceof String) &&\n        err.includes(\"Modal closed by user\")\n      ) {\n        dispatch(connectFailed(\"Modal closed by user\"));\n      } else {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}